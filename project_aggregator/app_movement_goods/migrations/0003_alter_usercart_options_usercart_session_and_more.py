# Generated by Django 4.1.3 on 2023-01-25 15:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('app_catalog', '0010_alter_product_category'),
        ('app_movement_goods', '0002_rename_content_usercart_cart'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='usercart',
            options={'verbose_name': 'Корзина пользователя', 'verbose_name_plural': 'Корзины пользователей'},
        ),
        migrations.AddField(
            model_name='usercart',
            name='session',
            field=models.CharField(default='', max_length=40, verbose_name='Сессия'),
        ),
        migrations.RemoveField(
            model_name='usercart',
            name='cart',
        ),
        migrations.AlterField(
            model_name='usercart',
            name='owner',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL, verbose_name='Чья корзина'),
        ),
        migrations.CreateModel(
            name='InsideCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveSmallIntegerField(default=0, verbose_name='Количество')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, null=True, verbose_name='Стоимость')),
                ('goods', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_catalog.product', verbose_name='Товары')),
                ('user_cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='app_movement_goods.usercart')),
            ],
        ),
        migrations.AddField(
            model_name='usercart',
            name='cart',
            field=models.ManyToManyField(blank=True, related_name='carts', through='app_movement_goods.InsideCart', to='app_catalog.product', verbose_name='Содержание корзины'),
        ),
    ]
